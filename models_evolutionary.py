import numpy as np
from evaluate import *
######
# Network dimensions: [5, 5, 2]
# 100 epochs, 100 players
# result: 8.030639259910107
weights = [
    np.array([[-2.46043985,  0.19731692, -2.60003501, -0.63530714, -0.11330564],
       [-0.31992816,  0.59781596, -1.78627285, -0.45460427, -0.04821909],
       [ 0.21337193,  1.29191448,  0.69304725, -0.43437728,  0.07200609],
       [ 2.4850863 , -0.16440501,  1.24031192,  0.28944105,  0.13697413],
       [-0.7046413 , -0.17917211, -0.41036008,  0.8141855 , -0.57730575]]),
    np.array([[-0.53798163,  1.94137101],
       [-0.01742727,  0.19310414],
       [-2.63420142,  0.65129154],
       [-1.62715822, -1.28432021],
       [ 0.15069681, -1.0814331 ]])]
biases = [
    np.array([[-0.25924487, -0.46672945,  0.12054167,  0.03910351,  0.75854698]]),
    np.array([[0.32148918, 0.02617153]])
]


def to_eval_evo1(state):
    for i in range(len(weights)):
        state = state @ weights[i] + biases[i]
    return np.argmax(state)
print(f"Small: {evaluate(to_eval_evo1)}")

######
# Network dimensions: [5, 5, 2]
# 200 epochs, 200 players
# result: 8.235347740995966
weights = [
    np.array([[ 2.27996565,  3.08299512, -1.43073265, -0.79306151,  3.58858851],
       [ 1.30464359, -0.98559919, -0.13745204,  1.67434462,  0.28692104],
       [-2.16037401, -2.06116002, -2.58359825,  1.77470963, -0.1749004 ],
       [-0.75041306, -1.62065008,  3.35709487, -0.76396582, -3.2975544 ],
       [ 0.17664216,  1.60120507,  0.7232882 ,  1.0949613 , -0.61289918]]),
    np.array([[ 1.3542234 , -0.11437597],
       [-0.26511151, -3.70767134],
       [-2.25991516,  0.47612996],
       [ 1.83055997,  1.26616871],
       [ 1.76549317, -1.13499047]])
]
biases = [
    np.array([[1.49010015, 0.24855471, 1.49358854, 1.14282114, 2.21020505]]),
    np.array([[0.57260984, 0.90622821]])
]


def to_eval_evo2(state):
    for i in range(len(weights)):
        state = state @ weights[i] + biases[i]
    return np.argmax(state)
print(f"Medium: {evaluate(to_eval_evo2)}")

######
# Network dimensions: [5, 5, 2]
# 400 epochs, 400 players
# result: 8.373704630763877
weights = [
    np.array([[ 3.19912986,  3.36769617,  2.18328123,  0.23803464, -4.99952045],
       [-2.04484669, -0.44039827, -2.74115722, -0.15645519,  1.4306971 ],
       [ 2.27007575, -3.46286291, -1.1436658 , -0.75132488, -1.93407803],
       [-2.81693833, -4.24643646, -0.07028818,  1.72782591,  3.32705125],
       [ 4.34483223, -0.47867706,  1.25176914, -0.18720314,  1.49725009]]),
    np.array([[ 2.85006518,  0.07015851],
       [ 0.72351997, -3.54846129],
       [ 1.03184744, -0.89133999],
       [-1.46181743,  0.73286167],
       [-0.42747022,  3.10054816]])
]
biases = [
    np.array([[-0.7507493 ,  1.73202299,  0.12433847, -0.21654049, -0.43994356]]),
    np.array([[-2.19326168, -2.9579446 ]])
]


def to_eval_evo3(state):
    for i in range(len(weights)):
        state = state @ weights[i] + biases[i]
    return np.argmax(state)
print(f"Large: {evaluate(to_eval_evo3)}")

######
